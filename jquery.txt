jquery是一个快速、简洁的JavaScript函数库
好处：
    1.简化js的复杂操作
    2.不再需要关心兼容问题
    3.提供大量实用方法

JQuery版本区别：
    1.0     可以兼容到IE8以下
    2.0     只兼容IE8以上
    3.0

JQuery基础语法：
    $(selector).action()
        $          定义了JQuery
        selector   选择器
        action()   操作

JQuery设计思想：
    1.模拟css选择器
    2.独有表达式选择
    3.多种筛选方法
    写法：
        1.方法函数化
        2.链式操作
        3.取值赋值合体

文档就绪事件：文档加载完成后执行jquery方法
    $(document).ready(function(){

    });
    简洁写法：
    $(function(){

    });

选择器：以$(selector)开头,选择器是css选择器雷同
    元素选择器：$('标签名')获取该对象
    id选择器：$('#id名')
    class选择器：$('.类名')
    $(this) - 当前元素
    $('*')  - 选取所有元素
    ...

事件：
    语法：$(selector).eventName(function);
    如：$('p').click(function(){ ... });
    常见的事件方法：
        $(document).ready()
        bind(even, function)  绑定事件
        on(even, function)
        click()         单击某个元素时
        change()        改变元素内容时
        dblclick()      双击某个元素时
        mouseenter()    鼠标穿过某个元素时
        mouseleave()    鼠标离开某个元素时
        mousedown()     鼠标在某个元素上按下时
        mouseup()       鼠标在某个元素上松开按钮时
        hover()         鼠标悬停在元素上时,两个函数，鼠标移到元素上触发第一个，离开，触发第二个
        focus()         当元素获取焦点时
        blur()          元素失去焦点时
        submit()        提交表单时触发

显示/隐藏：show()/hide()
    $(selector).show(speed, callback)   显示元素
    $(selector).hide(speed, callback)   隐藏元素
    $(selector).toggle(speed, callback) 显示/隐藏切换

效果：
    淡入淡出：
        $(selector).fadeIn(speed, callback)  淡入
        $(selector).fadeOut(speed, callback)  淡出
        $(selector).fadeToggle(speed, callback)  淡入/淡出切换
        $(selector).fadeTo(speed, opacity,callback) 渐变为给定透明度
    滑动：
        $(selector).slideDown(speed, callback) 向下滑动元素
        $(selector).slideUp(speed, callback) 向上滑动元素
        $(selector).slideToggle(speed, callback) 向上/下滑动元素
    动画：
        $(selector).animate({params}, speed, callback)
            params 设置css样式，色彩动画不包含在核心库中
        默认情况下，所有HTML元素都有一个静态位置，不会移动，如对位置进行操作，需要进行定位
        预定义值'show'、'hide'、'toggle'
    停止效果：
        $(selector).stop()//停止动画参数

允许多个方法进行链式操作追加动作

DOM操作：
    $(selector).text()  设置或获取元素文本内容(不包含标签)
    $(selector).html()  设置或获取元素文本内容（包括html标签）
    $(selector).val()   设置或获取表单元素的值
    $(selector).attr(attrname[, attrvalue]) 设置/获取属性值,可设置多个属性
    回调函数function(index, oldVal){ ... }

添加元素：
    append()    在被选中元素的内容中结尾插入,可连续插入多个内容
    prepend()   在被选中元素的内容中开头插入，可连续插入多个内容
    after()     在被选元素后插入内容
    before()    在被选元素前插入内容

删除元素：
    remove()    删除被选中元素及其子元素
    empty()     删除被选中元素的子元素

CSS操作：
    addClass()  向被选中元素添加一个或多个类(写在同一个引号内，空格隔开)
    removeClass()   向被选中元素删除一个或多个类
    toggleClass()   向被选中元素添加/删除切换一个或多个类
    css()       设置或返回被选中元素一个或多个样式属性

尺寸：
    width()     返回元素内容宽度
    height()    返回元素内容高度
    innerWidth() 返回元素包含内边距的宽
    innerHeight()返回元素包含内边距的高
    outerWidth() 返回元素包含边框、内边距的宽
    outerHeight()返回元素包含边框、外内边距的高

parent()    获取被选中元素的父元素(上一级元素)
parents()   获取被选中元素的所有父元素，直到根元素
children()  获取被选中元素的所有/指定直接子元素
find()      获取被选中元素的所有/指定 子元素
siblings()  返回被选中元素的所有同胞元素
next()      返回被选元素的下一个同胞元素
prev()      返回被选元素的上一个同胞元素

过滤方法：
    first()  返回被选元素中的第一个元素
    last()   返回被选元素中的最后一个元素
    eq(n)    返回被选元素中指定索引号的元素（0开始）
    filter() 返回被选元素中符合要求的元素
    not()    与filter相反

Ajax：
    $(selector).load(url, data, callback)
        回调函数参数responseTxt(成功的响应结果), statusTxt(响应状态), xhr(XMLHttpRequest对象)
    
    $.get()  通过HTTP GET请求从服务器上请求数据
        $.get(url, callback)  回调函数第一个参数是响应数据，第二个是请求状态(success,error)
    $.post() 通过HTTP POST请求从服务器上请求数据
        $.post(url, data, callback)

$.noConflict(); 释放对$标识符的控制，其他脚本就可以使用$了

JSONP: JSON的一种使用模式，可进行跨域请求数据
    JSONP 只适用于get请求
    $.getJSON(url, callback) 

插件：
    Validate插件为表单提供校验功能
    Cookie插件操作Cookie
        $.cookie('name', 'value', {expire: n, path: '/'}) expire为过期时间(天)
        $.cookie()          获取所有cookie 
        $.removeCookie()    删除cookie(与设置时参数一致)
    Accordion插件用于创建折叠菜单
    Treeview树形菜单插件：
        
    


