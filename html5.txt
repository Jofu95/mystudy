HTML5:
    大多数浏览器新版本都支持，IE9以下版本浏览器兼容HTML5的方法：
    <!-- [if lt IE 9]>
        <script src= "xxx/xx/html5shiv.min.js"></script>
    <![endif] -->
    初始化新标签的CSS：
        article,aside,dialog,footer,header,section,nav,figure,menu{display:block}

HTML5 Canvas:
    用于图形的绘制，通过脚本来完成
    <canvas>定义图形容器,默认width=300px，height=150px;
    浏览器不支持时，使用替换文本，在标签中
    1.通过JavaScript脚本获取容器对象(js放在body)
        var c = document.getElementById('myCanvas');
    2.创建context对象,getContext('2d')是HTML5的内置对象，可绘制线路、矩形、图形、字符、添加图像等 
        var ctx = c.getContext('2d');
    3.对象属性和方法的设置
        ctx.fillStyle="#ff0000";
        ctx.fillRect(0,0,150,75);
    fillStyle = color|gradient|pattern  填充绘图颜色|渐变|模式
    fillRect(x,y,width,height)  定义矩形当前填充的方式
    画线：
        beginPath()  新建路径
        moveTo(x,y)  定义线的开始的坐标
        lineTo(x,y)  定义线条结束的坐标
        closePath()  闭合路径
        arc(x,y,r,start,stop)   绘制圆形
        rect(x,y,width,heigth)  绘制矩形
        stroke()     绘制线条
        fill()       填充绘图，没有设置fillStyle时默认黑色填充
    文本：
        font=""             定义字体属性
        fillText(text,x,y)  绘制实心文本
        stroke(text,x,y)    绘制空心文本
    渐变：
        var grd = ctx.ctxcreateLinearGradient(x,y,x1,y1)  创建线条渐变
        var grd = ctx.createRadialGradient(x,y,r,x1,y1,r1) 创建径向/圆渐变
        grd.addColorStop(n, color); 指定颜色停止,n是0——1
        ctx.fillStyle = grd;
    图像：
        drawImage(image, x, y)  画布上绘制图像、画布、视频

HTML5内联SVG:
    svg指可伸缩矢量图形
    <svg xmlns="http://www.w3.org/2000/svg" version="1.1">
        <polygon points=""/>
    </svg>
    相比图像格式优势：可通过文本编辑，可被搜索、索引、脚本化、压缩，图像质量高
    svg不依赖分辨率，canvas以来分辨率

HTML5拖放：（drag和drop）
    1.设置元素为可拖放，添加属性draggable="true"
    2.ondragstart事件调用一个函数，规定被拖放的数据
        function drag(ev){
            ev.dataTransfer.setData("Text",ev.target.id)
        }
    3.ondragover事件规定何处放置被拖放的数据,并阻止默认处理方式
        function allowDrop(ev){
            ev.preventDefault();
        }
    4.进行放置ondrop
        function drop(ev){
            ev.preventDefault();
            var data = ev.dataTransfer.getData("Text");//获取被拖放的数据
            ev.target.appendChild(document.getElementById(data))
        }

HTML5 Geolocation(地理定位)：
    navigator.geolocation.getCurrentPosition()获取用户位置
    navigator.geolocation.watchPosition()获取实时位置

HTML5 video:
    <video>标签包含视频的标准方法,定义一个视频 controls属性显示控件
    <source />定义多媒体资源,type="video/mp4|ogg|webm"
    <video width="" height="" >
        <source src="" type="">
        浏览器不支持
    </video>
    play()   播放视频
    pause()  暂停播放
    paused   判断是否暂停
    width    设置视频窗口宽度

HTML5 audio:
    <audio>在网页上嵌入音频元素，controls属性显示控件
    <source />定义多媒体资源,type="audio/mpeg|ogg|wav"
    <audio width="" height="" >
        <source src="" type="">
        浏览器不支持
    </audio>

HTML5 Input类型：
    color、date、datetime、datetime-local、email、month、number、range、search、tel、time、url、week

HTML5 表单元素：
    <datalist>、<keygen>、<output>
    <datalist>规定输入域的选项列表，规定form或input域应该拥有自动完成功能
    <keygen>提供验证用户的可靠方法，提交表单时，会生成两个键，一个私钥一个公钥，前者存储在客户端，后者发送到服务器验证
    <output>

HTML5 表单属性：
    <form> : autocomplete、novalidate
    <input>: placeholder|required、...

HTML5 语义元素：
    有意义的元素，清楚元素的功能作用定义的内容
    <header>、<nav>、<article>、<aside>、<section>、<figcaption>、<figure>、<footer>
    <header>元素描述文档的头部区域，页面中可使用多个<header>元素
    <nav>元素定义导航链接的部分
    <aside>标签定义页面主区域内容之外的内容，如侧边栏
    <article>标签定义独立的内容
    <section>标签定义文档中的节，如章节、页眉、页脚、或文档其他部分
    <footer>描述了文档底部区域
    <figure>规定独立的流内容(图像、图表、照片、代码等)
    <figcaption>定义<figure>标签的标题

HTML5 web存储：
    是一个比cookie更好的本地存储方式
    数据以键/值对存在，web网页的数据只允许该网页访问使用
    localStorage、sessionStorage为客户端存储数据的两个对象
    localStorage - 用于长久保存整个网站的数据，保存的数据没有过期限制
    sessionStorage - 用于临时保存同一窗口的数据，在关闭窗口或标签页之后将会删除数据
    使用web存储前，检查浏览器是否支持localStorage和sessionStorage
        if(typeof(Storage) != "undefined")
        {
            //支持
        }else{
            //不支持
        }
    localStorage.key = value;
    localStorage.setItem(key, value); - 保存数据
    localStorage.getItem(key); - 读取数据
    localStorage.removeItem(key); - 删除单个数据
    localStorage.clear(); - 删除所有数据
    localStorage.key(index); - 得到某个索引的key