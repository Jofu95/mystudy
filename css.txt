CSS层叠样式表，定义HTML页面如何显示
语法：CSS规则由两部分组成，选择器和一条或多条声明
    selector{key1: value1;key2: value2;...}
    selector是要改变样式的HTML元素

注释：/* ... */

CSS选择器：
    id选择器：
        id选择器是HTML元素的属性id,通过#前缀加上id属性的属性值组成id选择器
        id选择器不能以数字开头,id保持唯一性，不重复
        #aa{...}
    class选择器:
        class选择器是HTML元素的属性class，通过.前缀加上class属性的属性值组成class选择器
        class选择器适合，多个元素定义相同样式时使用
        .bb{...}
    标签选择器：
        h1{...}、p{...}、div{...}、...
        html标签作为选择器
    属性选择器：
        [属性]{...} 
        [属性=值]{...} 
        [属性~=值]{...} | [属性*=值] 包含某个属性值的所有元素
        [属性 |= 值]{...} 以某个值开头完整值不是部分 [属性 ^= 值]{...}前几个字母包含值
        [属性 $= 值]{...} 结尾字母包含该值
    分组选择器：
        如果多个元素有相同的样式，为简便可用逗号将每个选择器隔开
        selector1,selector2,...{...}
    后代选择器：
        选取某元素的后代元素，空格隔开选择器
        selector1 selector2 ...{...}
    子元素选择器：
        选取某元素的直接子元素，子元素的子元素不是
        selector1 > selector2{...}
    相邻兄弟选择器：
        选取与某元素相邻的后面的一个同级(相同父元素)元素，
        selector1+selector2{...}
    后续兄弟选择器：
        选取某元素后面的所有同级(相同父元素)元素
        selector1~selector2{...}

CSS创建：
    插入样式表的方法有三种：外部样式表、内部样式表、内联样式
    外部样式表：
        将外部的.css文件引入到HTML文档中
        <link rel="stylesheet" type="text/css" href="xxx/xx/x.css">
    内部样式表：
        单个文档需要特殊样式时使用内部样式表
        样式位于<style>标签内部，且<style>标签位于文档头部
        <head><style> ... </style></head>
    内联样式：
        在HTML元素中一个style属性内定义样式
        <div style="background: red;border: 1px solid black"></div>
    多重样式：
        当外部样式、内部样式都对同一个元素有相同样式设定，那么优先级高的相同样式会覆盖优先级低的，
        而没有的样式就会继承过来
    多重样式优先级：
        内联样式 > 内部样式 > 外部样式 > 浏览器默认样式
        内部样式和外部样式的先后顺序也会影响优先级，相同元素样式在后面的会覆盖前面的

CSS背景：
    background-color  - 背景颜色
        background-color: #ff0000 | rgb(255,0,0) | red;
    background-image  - 背景图片
        background-image: url('xxx.jpg')
    background-repeat - 背景平铺
        background-repeat: repeat-x; 背景水平平铺
        background-repeat: repeat-y; 背景垂直平铺
        background-repeat: no-repeat; 背景不平铺
    background-position - 背景定位
        background-position: x% y%| xpx ypx | left/right/center/top/bottom  left/right/center/top/bottom
    background-attachment - 背景是否固定
        background-attachment: scroll(默认)| fixed(不会随页面滚动) | local(随元素内容滚动)
    简写：
        background: color url('xx') repeat position;

CSS文本格式：
    文本颜色:
        color: #ff0000 | rgb(255,0,0) | red;
    文本对齐方式:
        text-align: left  左对齐
        text-align: right 右对齐
        text-align: center 居中
        text-align: justify 两端对齐
    文本修饰：
        text-decoration: none  删除文本修饰
        text-decoration: overline 上划线
        text-decoration: line-through 删除线
        text-decoration: underline 下划线
    文本转换：
        text-transform: uppercase  大写
        text-transform: lowercase  小写
        text-transform: capitalize 首字母大写
    文本缩进：
        text-indent: xpx;
    文本阴影：
        text-shadow: x y blur color;
    行高：
        line-height: xpx;
    字间距：
        word-spacing: xpx;
    字符间距：
        letter-spacing: xpx;
    空白处理：
        white-space: nowrap; 文本不换行，直到遇见<br>
    
CSS字体：
    指定文本字体系列：(浏览器不支持时备选逗号后的字体)
        font-family: "Times New Roman",Georgia,Serif;
    字体大小：(字体默认大小为16px=1em)
        font-size: xpx;
    字体样式：
        font-style: italic; 斜体字
    字体粗细：
        font-weight: bold; 加粗 
        font-weight: xpx; 
    
CSS链接：
    四个链接状态：
        a:link - 正常，
        a:visited - 用户已访问过的链接
        a:hover - 用户鼠标放在链接上
        a:active - 链接被点击时

CSS列表：
    list-style: none;去掉列表默认标记样式
    列表标记：
        list-style-type: cirecle | squire | upper-roman | lower-alpha
    列表标记图像：
        list-style-image: url('xx/x/x.jpg');
    
CSS盒子模型：
    设计和布局使用，包括边距、边框、填充、实际内容
    margin(外边距)  - 边框外的区域
    border(边框)  - 围绕在内边距和外边距的边框
    padding(内边距)  - 内容周围的的区域
    content(内容)  - 盒子内容
    整个元素的占宽 = 宽度 + 左右内边距宽 + 左右边框宽 + 左右外边距

CSS边框：
    border: none;无边框
    边框样式：
        border-style: dotted;  点线边框
        border-style: dashed;  虚线边框
        border-style: solid;   实线边框
        border-style: double;  双线边框
    边框宽度：
        border-width: xpx;
    边框颜色：
        border-color: #ff0000 | rgb(255,0,0) | red;
    单边框设置：
        border-top|left|right|bottom-style:
        border-top|left|right|bottom-color:
        border-top|left|right|bottom-width:
    简写：
        border-style|color|width: 属性...
        一个属性是设置四个边框
        两个属性设置上下和左右
        三个属性设置上、左右、下
        四个属性上、右、下、左
        单边框border-left|right|top|bottom: color style width;
        各边框border: color style width;
        (没有强制要求顺序)

CSS轮廓(outline)：
    位于边框border外围
    outline: none;无轮廓
    outline-color:
    outline-style:
    outline-width:
    outline: color style width
    
CSS外边距(margin)：(只对块级元素起作用)
    margin-top|left|right|bottom: auto|xpx|x%;
    简写：
        margin: 上下左右
        margin: 上下 左右
        margin: 上 左右 下
        margin: 上 右 下 左
    
CSS内边距(padding)：(只对块级元素起作用)
    padding-top|left|right|bottom: auto|xpx|x%;
    简写：
        padding: 上下左右
        padding: 上下 左右
        padding: 上 左右 下
        padding: 上 右 下 左

CSS display和visibility:
    隐藏元素：
        display: none;
        visibility: hidden;
        区别：前者隐藏元素，且元素不会占用空间,后者仅仅是隐藏了，依然占用空间
    块级和内联元素：
        块级元素是一个元素占用了全部宽度，前后都是换行符。如：<h1>、<p>、<div>
        内联元素是只需要必要的宽度，不强制换行。如：<span>、<a>
        display: inline; 将块级元素转为内联元素,不具备宽高
        display: block; 将内联元素转为块级元素
        display: inline-block; 内联块元素，行内显示且具备宽高

CSS定位：
    position属性指定元素的定位类型
    position: static; 默认值，即没有定位
    position: fixed; 相对浏览器窗口是固定位置，与文档流无关，且不占据空间
    position: relative; 相对定位是相对其正常位置
    position: absolute; 绝对定位是相对父元素已经定位，没有就向上找定位元素，直到<html>
    position: sticky; 粘性定位，在relative和fixed之间切换,
        元素定位表现为跨越阈值前为相对定位，过后为固定定位，生效必须使用特定阈值之一top、left、right、bottom
    重叠元素：
        z-index属性指定一个元素的堆叠循序（那个元素在上面或者下面）
        z-index: n; n是数字可为负数，数值越大表示优先级越高，堆叠在最上面
    top、left、right、bottom边界偏移量
    
CSS overflow:
    overflow属性控制内容溢出元素区域时的显示方式:
        overflow: scroll; 内容会被修剪，但会有滚动条
        overflow: hidden; 内容会被修剪，其余部分不可见
        overflow: visible;内容不会修剪，回溢出,默认值
        overflow: auto;溢出同scroll

CSS 浮动：
    元素的水平浮动，元素向左或向右移动，直到外边缘碰到包含边框或者另一个浮动框的边框为止，不能上下移动
    float: left; 向左浮动
    float: right; 向右浮动
    清除浮动：为避免因浮动导致周围元素重新排列，
        clear: both;
    .clearfix::after{
        clear: both;
        content: '';
    }

CSS伪类元素：
    用来添加一些选择器的特殊效果
    :first-child      所有指定元素的父元素的第一个元素
    :hover            鼠标放在该元素上时
    :checked          选择所有选中的表单元素
    :disabled         选择所有禁用的表单元素
    :empty            选择所有没有子元素的元素
    :last-child       所有指定元素的父元素的最后一个元素
    :no(selector)     选择某个元素以外的元素
    :nth-child(n)     所有指定元素的父元素的第n个子元素
    :after            某个元素之后插入内容
    :before           某个元素之前插入内容
    :lang(no)         元素被定义
        q:lang(no){
            quotes: "~" "~";
        }
    
CSS媒体类型：
    @media规则：
        允许在相同样式表为不同媒体设置不同的样式
        @media screen //用于电脑显示
        {
            ...
        }
         @media all //用于所有媒体设备
        {
            ...
        }
        @media print //用于打印设备
        {
            ...
        }


CSS计数器：
    属性：
        counter-reset  -  创建或重置计数器
        counter-increment - 递增变量
        counter - 插入生成内容
        counter()或counters()函数，将计数器的值添加到元素
    



